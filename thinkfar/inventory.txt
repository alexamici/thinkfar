
Users
-----

	>>> from thinkfar.backoffice import load_init, load_gifi_accounting_universe
	>>> dummy = load_init(None)
	>>> dummy = load_gifi_accounting_universe(None)

	>>> from thinkfar.inventory import User
	>>> me = User.get_by_key_name('alexamici')
	>>> me.principal.email()
	u'alexamici@gmail.com'

	>>> from thinkfar.inventory import Currency, AccountingUniverse
	>>> universe = AccountingUniverse.get_by_key_name('GIFI')
	>>> currency = Currency.get_by_key_name('EUR')

	>>> from thinkfar.inventory import Book
	>>> book = Book(uid='default', owner=me, currency=currency, accounting_universe=universe)
	>>> dummy = book.put()
	>>> book.currency.uid
	u'EUR'

A simple itemset like a car
---------------------------

	>>> from thinkfar.inventory import ItemClass, ItemSet
	>>> car_class = ItemClass.get_by_key_name('GIFI-1740')
	>>> car = car_class.create_itemset(book=book, uid='0123', name='My Car')
	>>> car.description = 'A 2003 Honda'
	>>> dummy = car.put()

	>>> from datetime import date
	>>> car.acquire(date(2003, 2, 5))
	>>> car.dismiss(date(2012, 5, 5))

	>>> car.balance(date(2003, 2, 4))
	0L
	>>> car.balance(date(2003, 2, 5))
	1L
	>>> car.balance(date(2012, 5, 4))
	1L
	>>> car.balance(date(2012, 5, 5))
	0L

	>>> car.partial_balance(start=date(2012, 5, 4), end=date(2012, 5, 5))
	-1L

A simple itemset with linear transactions
-----------------------------------------

	>>> shares_class = ItemClass.get_by_key_name('GIFI-3500')
	>>> ge_plan = shares_class.create_itemset(book=book, uid='0124', name='GE shares')
	>>> ge_plan.description = 'GE shares accumulation plan'
	>>> dummy = ge_plan.put()

Careful, a linear transaction starts having a balance the day AFTER
its start_date!

Let's buy 365 shares of GE, one every day of the year:

	>>> ge_plan.acquire(start_date=date(2009, 12, 31), end_date=date(2010, 12, 31), amount=365)
	>>> ge_plan.balance(date(2009, 12, 31))
	0L
	>>> ge_plan.balance(date(2010, 1, 1))
	1L
	>>> ge_plan.balance(date(2010, 1, 31))
	31L
	>>> ge_plan.balance(date(2010, 12, 30))
	364L
	>>> ge_plan.balance(date(2010, 12, 31))
	365L

twenty years later sell the shares one per day:

	>>> ge_plan.dismiss(start_date=date(2029, 12, 31), end_date=date(2030, 12, 31), amount=365)
	>>> ge_plan.balance(date(2029, 12, 31))
	365L
	>>> ge_plan.balance(date(2030, 1, 1))
	364L
	>>> ge_plan.balance(date(2030, 12, 31))
	0L

	>>> ge_plan.balance(date(2020, 12, 31))
	365L
